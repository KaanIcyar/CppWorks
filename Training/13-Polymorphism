#include <iostream>
using namespace std;

class Shape {
protected:
    int weight, height;
public:
    void setValues(int weight, int height) {
        this->weight = weight;
        this->height = height;
    }
    virtual int area() {                         // if we dont write virtual all cout's gives base class's area which means 0.
        return 0;
    }
};

class Triangle: public Shape {
public:
    int area() {
        return (height * weight) / 2;
    }
};

class Square : public Shape {
public:
    int area() {
        return (height * weight);
    }
};

int main() {
    Triangle s1;
    Square s2;
    Shape s3;


    Shape* t1 = &s1;
    Shape* sq1 =&s2;

    t1->setValues(3, 4);
    sq1->setValues(3, 4);

    cout << t1->area() << endl;
    cout << sq1->area() << endl;
    cout << s3.area() << endl;

    return 0;
}
